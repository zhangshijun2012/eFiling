package com.sinosoft.efiling.hibernate.entity;

import java.io.Serializable;

// Generated 2013-7-1 18:57:58 by Hibernate Tools 4.0.0


/**
 * PrpDCoderiskId generated by hbm2java
 */
@SuppressWarnings("serial")
public class PrpDCoderiskId implements Serializable {

	private String codeType;
	private String codeCode;
	private String riskCode;

	public PrpDCoderiskId() {
	}

	public PrpDCoderiskId(String codeType, String codeCode, String riskCode) {
		this.codeType = codeType;
		this.codeCode = codeCode;
		this.riskCode = riskCode;
	}

	public String getCodeType() {
		return this.codeType;
	}

	public void setCodeType(String codeType) {
		this.codeType = codeType;
	}

	public String getCodeCode() {
		return this.codeCode;
	}

	public void setCodeCode(String codeCode) {
		this.codeCode = codeCode;
	}

	public String getRiskCode() {
		return this.riskCode;
	}

	public void setRiskCode(String riskCode) {
		this.riskCode = riskCode;
	}

	public boolean equals(Object other) {
		if ((this == other)) return true;
		if ((other == null)) return false;
		if (!(other instanceof PrpDCoderiskId)) return false;
		PrpDCoderiskId castOther = (PrpDCoderiskId) other;

		return ((this.getCodeType() == castOther.getCodeType()) || (this.getCodeType() != null
				&& castOther.getCodeType() != null && this.getCodeType().equals(castOther.getCodeType())))
				&& ((this.getCodeCode() == castOther.getCodeCode()) || (this.getCodeCode() != null
						&& castOther.getCodeCode() != null && this.getCodeCode().equals(castOther.getCodeCode())))
				&& ((this.getRiskCode() == castOther.getRiskCode()) || (this.getRiskCode() != null
						&& castOther.getRiskCode() != null && this.getRiskCode().equals(castOther.getRiskCode())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getCodeType() == null ? 0 : this.getCodeType().hashCode());
		result = 37 * result + (getCodeCode() == null ? 0 : this.getCodeCode().hashCode());
		result = 37 * result + (getRiskCode() == null ? 0 : this.getRiskCode().hashCode());
		return result;
	}

}
